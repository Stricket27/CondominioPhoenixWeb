@model IEnumerable<Infraestruture.Models.ViewModel.EstadoCuentaResidenciaPlanViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Lista de estados de cuentas</h2>

<p>
    <a href="@Url.Action("Agregar", "EstadoCuenta")" class="btn btn-primary"><i class="fa-solid fa-plus"></i> Agregar nuevo estado de cuenta</a>
</p>
<div class="col-md-4">
    <div class="card my-4">
        <h5 class="card-header">Buscar estado de cuenta por fecha</h5>
        @using (Ajax.BeginForm("buscarEstadoCuentaxFecha", "EstadoCuenta", new AjaxOptions
        {
            UpdateTargetId = "resultado",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "GET",
        }))
        {
            <div class="card-body">
                <div class="input-group">
                    @Html.TextBox("nombre", "",
                   new
                        {
                       @class = "form-control",
                   @placeholder = "Nombre"
                   })
                    <button type="submit" class="btn btn-primary"><i class="fa-solid fa-magnifying-glass"></i> Buscar</button>

                </div>
            </div>
        }
    </div>
</div>

@if (Model.Count() > 0)
{
    <table class="table" style="text-align:center">
        <tr>
            <th>
                Residencia relacionado
            </th>
            <th>
                Plan relacionado
            </th>
            <th>
                Estado de pago
            </th>
            <th>
                Proxima fecha a pagar
            </th>
            <th>
                Estado actual
            </th>


            <th></th>
        </tr>
        <tbody id="resultado">
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumeroResidencia)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescripcionPlan)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EstadoPago)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProximaFechaPago)
                    </td>
                    <td>
                        @if (item.EstadoActual == "Activo")
                        {
                            <i style="color: lawngreen" class="fa-solid fa-unlock"></i>
                        }
                        else
                        {
                            <i style="color: red" class="fa-solid fa-lock"></i>
                        }
                        @Html.DisplayFor(modelItem => item.EstadoActual)
                    </td>


                    <td>
                        <a href="@Url.Action("Editar", "EstadoCuenta", new { id = item.ID_EstadoCuenta })" class="btn btn-warning"><i class="fa-solid fa-pen-to-square"></i> Editar</a>
                        <a href="@Url.Action("Detalle", "EstadoCuenta", new { id = item.ID_EstadoCuenta })" class="btn btn-info"><i class="fa-solid fa-pen-to-square"></i> Detalle</a>
                        @if (item.EstadoActual == "Activo")
                        {
                            <a href="@Url.Action("CambiarEstado", "EstadoCuenta", new { id = item.ID_EstadoCuenta })" class="btn btn-danger"><i class="fa-solid fa-x"> </i> Inactivo</a>
                        }
                        else
                        {
                            <a href="@Url.Action("CambiarEstado", "EstadoCuenta", new { id = item.ID_EstadoCuenta })" class="btn btn-success"><i class="fa-solid fa-check"> </i> Activo</a>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h1>No hay datos por mostrar</h1>
}

<script>
        $(function(){
            var lista =@Html.Raw(Json.Encode(ViewBag.listaNombres));
            $("#nombre").autocomplete({
                source: lista
            });
        });
</script>